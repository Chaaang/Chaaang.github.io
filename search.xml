<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[ÊàëÁöÑRMBPÈÅáÂà∞ÁöÑÈóÆÈ¢òÂíåËß£ÂÜ≥ÊñπÊ≥ïÔºàÂ¶Ç iPhone ÈÄöËøá USB ËøûÊé• Macbook Â∞±Âìç‰∏™‰∏çÂÅúÁöÑÈóÆÈ¢ò Ëé´ÂêçÂÖ∂Â¶ôÊó†Ê≥ïÂêØÂä®Ôºâ]]></title>
    <url>%2F2017%2F09%2F18%2F2017-09-18%2F</url>
    <content type="text"><![CDATA[ÈóÆÈ¢òËÆ∞ÂΩïÁ¨¨‰∏ÄÊ¨° ÂºÄÊú∫ÈîÆÊ≤°ÂèçÂ∫îË∑ëÂéªËãπÊûúÁª¥‰øÆÂ∫óÁª¥‰øÆÂëòÊãøÂá∫‰∏ÄÊ†πÂæàÁ†¥ÊóßÁöÑmagsafeÁ∫øÈÄöÁîµÁÆÄÂçïÁöÑÂ∞ùËØï‰∫Ü‰∏Ä‰∏ãÂºÄÊú∫Âêé„ÄÇÂ∞±ËØ¥Ë¶ÅÊîæÂú®‰ªñÈÇ£ÔºåËøôÂèØÊòØÊàë‰∏ªÂäõÊú∫ÈÇ£ËÇØÂÆö‰∏çË°å„ÄÇÂõûÂÆ∂Â∞ùËØïÁΩë‰∏äÊêúÁ¥¢‰∏ÄÁï™ÔºåÈáçËÆæPRAMÂíåÈáçËÆæSMC‰∫Ü‰∏Ä‰∏ãÈóÆÈ¢òÂ∞±Â•Ω‰∫Ü„ÄÇüòÖ‰ª•ÂêéÂ∞±ÂÖªÊàê‰∫Ü‰∏Ä‰∏™‰π†ÊÉØÂá∫‰∫ÜÈóÆÈ¢òÂÖàÈáçÁΩÆ„ÄÇ Á¨¨‰∫åÊ¨° iphoneÊï∞ÊçÆÁ∫øËøûmacÂìç‰∏™‰∏çÂÅúÊàëÁöÑÁ∫øËÉΩÊ≠£Â∏∏ÂÖÖÁîµÔºå‰ΩÜÊòØËøûÊé•ÊàëÁöÑrmbpÂêéÂìç‰∏™‰∏çÂÅú„ÄÇËøôÊ¨°ÁïôÊÑè‰∫Ü‰∏Ä‰∏ãÂ∞±ÈáçËÆæPRAMÂíåÈáçËÆæSMC‰ΩÜÊ≤°Âï•ÊïàÊûú„ÄÇÁåúÊµãÂèØËÉΩÊòØusbÊé•Âè£Êùæ‰∫ÜÔºåÂ∞ùËØïËΩªÊëÅÁ∫øÂ§¥‰∏Ä‰ºöÂÑøÂ∞±ËøûÊé•Ê≠£Â∏∏‰∫Ü„ÄÇ ËøôÁßçÊÉÖÂÜµÂ∫îËØ•Ê≥®ÊÑèÔºö Á∫øÔºà‰∏ÄÂÆöË¶ÅÁî®ÂÆòÊñπÁ∫øÔºâÊòØ‰∏çÊòØÂ•ΩÁöÑÔºåÊç¢Âè∞Êú∫Â≠êÊµãËØï‰∏Ä‰∏ã„ÄÇ ÈáçËÆæPRAM ÂÖ≥Èó≠ Mac„ÄÇ Âú®ÈîÆÁõò‰∏äÊâæÂà∞‰ª•‰∏ãÊåâÈîÆÁöÑ‰ΩçÁΩÆÔºöCommand (‚åò)„ÄÅOption„ÄÅP Âíå R„ÄÇÊÇ®ÈúÄË¶ÅÂú®Ê≠•È™§ 4 ‰∏≠ÂêåÊó∂Êåâ‰ΩèËøô‰∫õÈîÆ„ÄÇ ÂêØÂä®ÁîµËÑë„ÄÇ Âá∫Áé∞ÁÅ∞Â±èÂâçÊåâ‰Ωè Command-Option-P-R ÈîÆ„ÄÇ Êåâ‰∏ãËøô‰∫õÈîÆÔºåÁõ¥Âà∞ÁîµËÑëÈáçÊñ∞ÂêØÂä®ÔºåÊÇ®‰ºöÂÜçÊ¨°Âê¨Âà∞ÂêØÂä®Â£∞„ÄÇÁîµËÑëËá™Ë°åÈáçÂêØÁöÑÁ¨¨‰∏âÊ¨°ÔºåÊÇ®Â∞±ÂèØ‰ª•ÊùæÂºÄ‰∫Ü„ÄÇ ÈáçËÆæSMC ÂÖ≥Èó≠ÁîµËÑë„ÄÇ Â∞Ü MagSafe ÁîµÊ∫êÈÄÇÈÖçÂô®ËøûÊé•Âà∞ÁîµÊ∫êÂíå MacÔºàÂ¶ÇÊûúÂ∞öÊú™ËøûÊé•ÁöÑËØùÔºâ„ÄÇ Âú®ÂÜÖÂª∫ÈîÆÁõò‰∏äÔºåÂêåÊó∂Êåâ‰∏ãÔºàÂ∑¶‰æßÔºâShift-Control-Option ÈîÆÂíåÁîµÊ∫êÊåâÈíÆ„ÄÇËøô‰∏™Ê≠•È™§‰∏ç‰ºöÂêØÂä®ÁîµËÑë„ÄÇ Êé•‰∏ãÊù•ÔºåÊÇ®ÂèØ‰ª•ÂêåÊó∂ÊùæÂºÄÊâÄÊúâÈîÆÂíåÁîµÊ∫êÊåâÈíÆ„ÄÇ Êåâ‰∏ãÁîµÊ∫êÊåâÈíÆÊâìÂºÄÁîµËÑë„ÄÇ]]></content>
      <categories>
        <category>RMBP</category>
      </categories>
      <tags>
        <tag>macOS</tag>
        <tag>iOS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÂºÄÊ∫êÈ°πÁõÆ Morning]]></title>
    <url>%2F2017%2F09%2F02%2F2017-09-14-2%2F</url>
    <content type="text"><![CDATA[È°πÁõÆÂú∞ÂùÄ Èù¢ÂêëÁî®Êà∑ Êúâ‰∏ÄÂÆöÂä®ÊâãËÉΩÂäõÁöÑÊôÆÈÄöÁî®Êà∑ÂíåÁ®ãÂ∫èÂëò ‰ΩøÁî®Âú∫ÊôØ ÊòØÊâìÂºÄterminalÊó∂Ëá™Âä®ÂØπÊüê‰∫õÁΩëÁ´ôÁõëÊµãÂπ∂ËøõË°åËßÑÂæãÂåñÊìç‰Ωú(Â¶Ç Á≠æÂà∞ÔºåÊâìÂç°ÔºåÂèëÊó©ÂÆâÔºåÈ°∂Â∏ñÔºåÂÜÖÂÆπÁ≠õÈÄâÁ≠â) ÊîØÊåÅÂπ≥Âè∞ ‰∏ªË¶ÅÊòØ MacOSÂíåLinux (ÊâãÈáåÊ≤°WinÁöÑÁ¨îËÆ∞Êú¨) ‰ΩøÁî®ÊñπÊ≥ï1. ÂÖãÈöÜÈ°πÁõÆgit clone https://github.com/Changgg/morning.git&amp;&amp; cd morning 2. ÂÆâË£Ö‰æùËµñÈ°πpip install -r requirements.txt 3. ÈÖçÁΩÆ‰ΩøÁî® chrome ÊµèËßàÂô®ÂÆâË£Ö EditThisCookie Êèí‰ª∂ÔºåÂ∞ÜÈ°µÈù¢cookiesÂØºÂá∫Âà∞Ââ™Ë¥¥ÊùøÂπ∂ÊîæÂú®cookiesÊñá‰ª∂Â§π‰∏ã‰ª•Á´ôÁÇπÂüüÂêçÊâìÂ§¥ÁöÑtxtÊñá‰ª∂Èáå(Â¶Çjobbole.com.txt) Êé®ËçêÁ´ôÁÇπ(v2ex, ÁΩëÊòì‰∫ëÈü≥‰πêÔºåjobbole)„ÄÇÂ¶ÇÊûú‰∏çÈááÂèñËøôÁßçÊñπÂºè‰øùÂ≠òÁöÑËØùÂ∞Ü‰ºöËá™Âä®ËØªÂèñfirefoxÁöÑcookiesÔºåÂ¶ÇÊûúËØªÂèñÂ§±Ë¥•‰ºöÊä•Èîô„ÄÇ Â¶ÇÊûú‰∏çÊÉ≥‰ΩøÁî®Êüê‰∫õÁΩëÁ´ôÁöÑËØùÔºåËØ∑‰øÆÊîπconfig.py ÂÜÖ list_black Êï∞ÁªÑ ÊäÄÂ∑ß 1 ÊâãÂä®Ë∞ÉÁî®alias morning=&quot;python3 /Users/c/PycharmProjects/morning/morning.py&quot; ÊúÄËøëÊõ¥Êñ∞ Â∞ÜÊìç‰ΩúÁªìÊûú‰øùÂ≠òÂπ∂ÂØπÊú™ÊàêÂäüÁöÑÊìç‰ΩúÂèØ‰ª•ÂÜçÊ¨°Â∞ùËØï ÁôªÂΩïÈÄªËæëÁôªÈôÜÈÉ®ÂàÜÈÄâÊã©ÁúÅÂéªÔºåÁî±Áî®Êà∑Â∞ÜÊµèËßàÂô®ÁöÑcookiesÊèêÂèñÂá∫Êù•„ÄÇÁõÆÂâçÁöÑÂèØÈÄâÈ°πÊòØ: ChromeÊµèËßàÂô®: ‰ΩøÁî® EditThisCookie Êèí‰ª∂ Ëá™Âä®‰ªé Firefox ÊµèËßàÂô®ÂÜÖËé∑ÂèñCookies (Á≥ªÁªüÈªòËÆ§Ë∑ØÂæÑ‰∏ã) ÁΩëÊòìÈü≥‰πêÊó†Ê≥ï‰ΩøÁî®ËøôÁßçÊñπÂºèÁôªÈôÜ Á´ôÁÇπV2EX v2ex Ëá™Âä®Á≠æÂà∞ÂíåÊ∂àÊÅØÊ£ÄÊü•ÊòæÁ§∫ ÁΩëÊòì‰∫ëÈü≥‰πê ÁßªÂä®Á´ØÁ≠æÂà∞ pcÁ´ØÁ≠æÂà∞ ‰ºØ‰πêÂú®Á∫ø Âü∫Êú¨ÂäüËÉΩ ‰∫¨‰∏ú ÁôªÂΩï ÊâãÊú∫Âè∑ÂØÜÁ†ÅÁôªÂΩï ÈùôÈªòÁôªÂΩïÔºàÊó†ÈúÄÈ™åËØÅÁ†ÅÁôªÂΩïÔºâ ÊâãÊú∫Âè∑Áü≠‰ø°ÁôªÂΩï Â∞èÁôΩÂç°Èí¢ÈïöÊâìÂç° ‰∫¨‰∏úÂÆ¢Êà∑Á´ØÈí¢ÈïöÊâìÂç° ÊµÅÈáèÂä†Ê≤πÁ´ôÁ≠æÂà∞È¢ÜÊµÅÈáè ‰∫¨‰∏úÂ∞èÈáëÂ∫ìÁé∞ÈáëÁ∫¢ÂåÖ ‰∫¨‰∏ú‰ºöÂëòÈ°µÁ≠æÂà∞È¢Ü‰∫¨Ë±Ü ‰∫¨‰∏úÈáëËûçÁ≠æÂà∞È¢Ü‰∫¨Ë±Ü ‰∫¨‰∏úÂÆ¢Êà∑Á´ØÁ≠æÂà∞È¢Ü‰∫¨Ë±Ü ÁôªÂΩïÈÄªËæëhttps://payrisk.jd.com/m.html Ë±ÜÁì£ Ëá™Âä®È°∂Â∏ñ]]></content>
      <categories>
        <category>ÂºÄÊ∫êÈ°πÁõÆ</category>
      </categories>
      <tags>
        <tag>Ëá™Âä®Âåñ</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Ë±ÜÁì£ÁîµÂΩ±È°µÈù¢‰ø°ÊÅØÂ¢ûÂº∫]]></title>
    <url>%2F2017%2F08%2F02%2F2017-09-14-1%2F</url>
    <content type="text"><![CDATA[GreasyFork ËÑöÊú¨È°µÈù¢ ÂäüËÉΩ‰ªãÁªç ÁæéÂåñË±ÜÁì£ÁîµÂΩ±È°µÁöÑÊéíÂ∏É Âè≥‰æßÊèê‰æõÂêÑÁ¨¨‰∏âÊñπÁΩëÁ´ôÁöÑÂø´Êç∑ÈìæÊé•ÔºåÈÉ®ÂàÜÁ´ôÁÇπÊèê‰æõÁä∂ÊÄÅÊ£ÄÊü• ÁîµÂΩ±‰ªãÁªç‰∏ãÊñπÂä†ÂÖ•Á¨¨‰∏âÊñπÊèê‰æõÂ≠óÂπïËµÑÊ∫êÁöÑÁ´ôÁÇπ Êà™Âõæ Êõ¥Êñ∞Êó•Âøó ‰øÆÂ§çËÑöÊú¨ÈÉ®ÂàÜÁΩëÂèãÂ§±ÊïàÈóÆÈ¢òhttps://greasyfork.org/zh-CN/forum/discussion/29341/x ‰øÆÂ§çBUG ReferenceError: GM_addStyle is not definedhttps://greasyfork.org/zh-CN/forum/discussion/28348/x 2017Âπ¥06Êúà Â¢ûÂä†ÈÄªËæëÂ±èËîΩÊõ¥Â§öÊüê‰∫õËÆ©‰∫∫‰∏çËàíÊúçÁöÑÁïåÈù¢ÂÖÉÁ¥† https://greasyfork.org/zh-CN/forum/discussion/24565/x https://greasyfork.org/zh-CN/forum/discussion/24164/xÊõ¥Êñ∞Á´ôÁÇπÂú∞ÂùÄÔºåÂä†ÂÖ•Êñ∞Á´ôÁÇπ http://ifkdy.com/ https://greasyfork.org/zh-CN/forum/discussion/24578/xÂ¢ûÂä†Âú®Á∫øÊí≠ÊîæËµÑÊ∫êÁÇπ ÂèÇ‰∏é‰∫§ÊµÅ QÁæ§ 289207565ÔºåËøôÈáå‰πüÂèØ‰ª•ÂèóÁêÜÂª∫ËÆÆÂíåËÑöÊú¨Êõ¥Êñ∞ÂçèÂä©Âì¶ ÊàëÁöÑ Github ÂºÄÊ∫êÈ°πÁõÆÈáå‰πüÂèØ‰ª•Êèê‰∫§issueÂì¶]]></content>
      <categories>
        <category>Userscript</category>
      </categories>
      <tags>
        <tag>Ê≤πÁå¥Â≠êËÑöÊú¨</tag>
        <tag>Ë±ÜÁì£</tag>
        <tag>Ë±ÜÁì£ÁîµÂΩ±</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ÁΩëÊòì‰∫ëÈü≥‰πêÂ¢ûÂº∫]]></title>
    <url>%2F2017%2F08%2F01%2F2017-09-14%2F</url>
    <content type="text"><![CDATA[GreasyFork ËÑöÊú¨È°µÈù¢ ÂäüËÉΩ‰ªãÁªç ÁæéÂåñÁΩëÊòìÈü≥‰πêÁöÑÊéíÂ∏É,ÂéªÈô§È¶ñÈ°µÊüê‰∫õÁâπÂà´ÈöæÁúãÁöÑÂπøÂëäÊàñÂÖ∂‰ªñÁî®Êà∑‰∏çÂèãÂ•ΩÁöÑÈ°µÈù¢ÂÖÉÁ¥†„ÄÇ; ÁÇπÂáªÊí≠ÊîæÂô®ÁöÑÊ≠åÊõ≤Â∞ÅÈù¢Â∞±ÂèØ‰ª•Áõ¥Êé•‰∏ãËΩΩÊ≠åÊõ≤ÔºåÊ≤°Êúâ‰æµÂÖ•È°µÈù¢ÂÖÉÁ¥†Ôºà‰∏çÊÉ≥ÂΩ±ÂìçÁæéÊÑü,ÂΩìÂê¨Âà∞Ëá™Â∑±ÂñúÊ¨¢ÁöÑÊ≠åÁöÑÊó∂ÂÄô‰∏çÈúÄË¶ÅËøõÂÖ•‰ªª‰ΩïÁïåÈù¢Áõ¥Êé•ÁÇπÂáªÊ≠åÊõ≤Â∞ÅÈù¢Â∞±Áõ¥Êé•ÂèØ‰ª•‰∏ãËΩΩ„ÄÇ; Âú®Á∫øÊí≠Êîæ‰ΩøÁî®Êõ¥È´òÈü≥Ë¥®; Ëá™Âä®ÁÇπÂáªÁ≠æÂà∞ÊåâÈíÆ Êà™Âõæ Â∑≤Áü•ÈóÆÈ¢ò ‰∏çÊîØÊåÅ HTTPS‰∏ãÊ¨°Êõ¥Êñ∞‰æø‰ºö‰øÆÂ§ç ÈÉ®ÂàÜÈü≥‰πêÊ≤°ÊúâÊõ¥È´òÈü≥Ë¥®„ÄÇÂõ†‰∏∫ÁΩëÊòì‰∫ëËá™ÁîüÊ≤°ÊúâÊèê‰æõÊõ¥È´òÂìÅË¥®ÁöÑÔºåËÄåÊàë‰ª¨ÁöÑËÑöÊú¨Âπ∂‰∏çÊòØ‰ªéÁ¨¨‰∏âÊñπËµÑÊ∫êÁÇπËé∑ÂèñÔºà‰ª•ÂêéÂèØ‰ª•ËÄÉËôëÔºâ„ÄÇ ÂèÇ‰∏é‰∫§ÊµÅ QÁæ§ 289207565ÔºåËøôÈáå‰πüÂèØ‰ª•ÂèóÁêÜÂª∫ËÆÆÂíåËÑöÊú¨Êõ¥Êñ∞ÂçèÂä©Âì¶ ÊàëÁöÑ Github ÂºÄÊ∫êÈ°πÁõÆÈáå‰πüÂèØ‰ª•Êèê‰∫§issueÂì¶ È°πÁõÆÂºÄÂèë]]></content>
      <categories>
        <category>Userscript</category>
      </categories>
      <tags>
        <tag>Ê≤πÁå¥Â≠êËÑöÊú¨</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PyQt5 ‰∏é PyQt4 Â∑ÆÂà´Â∫îÁî®]]></title>
    <url>%2F2017%2F06%2F14%2F2017-09-13%2F</url>
    <content type="text"><![CDATA[ÊèèËø∞ËÉΩÂäõÊúâÈôêÔºå‰∏çÁ°ÆÂÆöÁöÑÁøªËØë‰ºöÂú®ÊóÅËæπÊ≥®ÈáäËã±ÊñáÊõ¥Êñ∞Êó∂Èó¥Ôºö2017Âπ¥05Êúà12Êó•ÂÆòÁΩëÈìæÊé• ‰∏ç‰∏é PyQt4 ÂÖºÂÆπËôΩÁÑ∂ÂÆûÈôÖ‰∏äÂçáÁ∫ßPyQt4ÂÜôÁöÑÈ°πÁõÆ‰∏çÊòØÈÇ£‰πàÁ≥ü ‰∏çÂÜçÂØπPythonËÄÅÁâàÊú¨Êèê‰æõÊîØÊåÅÔºàPython 2.6 ‰πãÂâçÔºâ‰∏çÂÜçÂÆûÁé∞PyQt4‰∏çÊé®ËçêÁöÑAPIÊé•Âè£PyQt5 ‰∏çÊîØÊåÅ‰ªª‰ΩïÂú®PyQt4ÁâàÊú¨‰∏≠Ê†áËÆ∞‰∏∫‰∏çÊé®ËçêÊàñËàçÂºÉÁöÑQt APIÔºàÂ¶ÇÊûúÊúâÂ∞±‰ºöÂΩìBugÂ§ÑÁêÜÔºâ ‰∏çÂÜçÊèê‰æõÂ§öÁâàÊú¨APIÊé•Âè£PyQt4 ÊîØÊåÅÂ§öÁâàÊú¨ÁöÑAPIÔºàÂ¶ÇQStringÔºåQVariantÁ≠âÔºâPyQt5 Âè™ÊîØÊåÅÊúÄÊñ∞ÁöÑAPIÁâàÊú¨(Èô§QVariantÂ§ñ) QVariantÁöÑÊîπÂèòÊòØÂéªÊéâ‰∫Ü QPyNullVariant ÔºàÂú®QVariantÁöÑÂ∏ÆÂä©ÊñáÊ°£Èáå‰πüÊúâÊòæÁ§∫Ôºâ ‰ø°Âè∑ÂíåÊèíÊßΩÔºàSignals and SlotsÔºâÊú∫Âà∂Êõ¥Êñ∞12345# ‰∏ãÈù¢ÊâÄÂàóÂá∫Êù•ÁöÑË∞ÉÁî®ÊñπÂºè‰∏çÂÜçÊîØÊåÅQObject.connect()QObject.emit()SIGNAL()SLOT() ÊâÄÊúâÂê´Êúâ‰ª•SIGNAL()ÊàñSLOT()ËøîÂõûÁªìÊûú‰∏∫ÂèÇÊï∞ÁöÑÊñπÊ≥ï‰∏çÂÜçÊîØÊåÅÔºåËΩ¨ËÄåÊèê‰æõÂèØË∞ÉÁî®ÊñπÊ≥ïÔºàÂáΩÊï∞ÔºâÊàñÂ∑≤ÊçÜÁªëÁöÑ‰ø°Âè∑Ôºàa bound signalÔºâ È£éÊ†ºÂØπÊØîÔºà‰ª£Á†ÅÔºâ1234567891011121314151617181920212223242526# PyQt5combo = QtWidgets.QComboBox(self)combo.activated.connect(self.onActivated)# PyQt4combo = QtWidgets.QComboBox(self)self.connect(combo, QtCore.pyqtSignal('activated(QString)'), self.onActivated)``` ### `QObject.disconnect()` Ë∞ÉÁî®Êó†ÂèÇÊï∞Ôºå‰ΩúÁî®Êñ≠ÊéâÊâÄÊúâ‰ø°Âè∑ÂíåÊèíÊßΩÁöÑËøûÊé•### TODO New-style Signals and SlotsQt implements signals with an optional argument as two separate signals, one with the argument and one without it. PyQt4 exposed both of these allowing you to connect to each of them. However, when emitting the signal, you had to use the signal appropriate to the number of arguments being emitted.PyQt5 exposes only the signal where all arguments are specified. However it allows any optional arguments to be omitted when emitting the signal.Unlike PyQt4, PyQt5 supports the definition of properties, signals and slots in classes not sub-classed from QObject (i.e. in mixins).## Êñ∞Â¢û `QtQml` `QtQuick` Ê®°ÂùóÂπ∂ÊîØÊåÅ‰ªéQMLÂàõÂª∫PythonÂØπË±°‰∏çÂÜçÊîØÊåÅ`QtDeclarative`, `QtScript`, `QtScriptTools`Ê®°Âùó‰ª•‰∏äÊ®°ÂùóË¢´ `QtQml` Âíå `QtQuick` ÊõøÊç¢„ÄÇÊîØÊåÅ‰ªéQMLÂàõÂª∫PythonÂØπË±°## `QtGui` Ê®°ÂùóÊõ¥Êñ∞QtGuiÊ®°ÂùóË¢´ÊãÜÂàÜ‰∫Ü‰∏∫QtGui, QtPrintSupport ÂíåQtWidgets‰∏âÂ§ßÊ®°Âùó```pythonfrom PyQt5 import QtGui, QtPrintSupport, QtWidgets QtOpenGL Ê®°ÂùóÊõ¥Êñ∞PyQt5ÁöÑQtOpenGLÊ®°ÂùóÂè™Êèê‰æõQGLContext QGLFormat Âíå QGLWidgetÁ±ª QtWebKit Ê®°ÂùóÊõ¥Êñ∞PyQt4ÁöÑQtWebKitÂú®PyQt5‰∏≠ÂàÜÊàê‰∫ÜQtWebKitÂíåQtWebKitWidgetsÊ®°Âùó Êâ©Â±ïÊÄßÂ¢ûÂº∫‰∏çÂÜçÊîØÊåÅpyqtconfigÊ®°ÂùóThe PyQt5 Extension APIPyQt5 ÊîØÊåÅÁ¨¨‰∏âÊñπÂåÖÁõ¥Êé•Âü∫‰∫éPyQt5ÂºÄÂèë(Â¶ÇQScintilla) dbus.mainloop.qt Ê®°ÂùóÊõ¥Âêç12#dbus.mainloop.qtdbus.mainloop.pyqt5 # Áõ∏ÂêåÂäüËÉΩÂè™Êõ¥Âêç QDataStream ÊòéÊòæÊï∞ÂÄºÁöÑÂèÇÊï∞‰ª•Êï∞ÂÄºÂ§ÑÁêÜÂíåËøîÂõûreadUint8(); readInt8(); writeUInt8(); writeInt8() ÊñπÊ≥ïÂú®PyQt5‰∏≠‰ª•Êï∞ÂÄºÁ±ªÂûãÂÜôÂÖ•ÂíåËøîÂõûÔºàPyQt4‰∏≠ÊòØ‰ª•Êï∞ÂÄºÊñáÊú¨Ôºâ QFileDialog Êñá‰ª∂Êìç‰ΩúÊé•Âè£Êõ¥Êñ∞ PyQt5 PyQt4 Â§áÊ≥® getOpenFileName() getOpenFileNameAndFilter() getOpenFileNames() getOpenFileNamesAndFilter() getSaveFileNameAndFilter() getSaveFileName() PyQt5 ËàçÂºÉ‰∫Ü PyQt4 ÂêåÂêçÁöÑÊñπÊ≥ï QMatrix ÊñπÊ≥ï‰∏çÂÜçÊîØÊåÅPyQt5 ‰∏≠Â∑≤Áªè‰∏çÂÜçÊîØÊåÅ PyQt4Áßç‰∏çÊé®ËçêÊñπÊ≥ï QMatrixPyQt5 ‰∏≠ÂèØ‰ª•ËÄÉËôë‰ΩøÁî® QPropertyAnimation QGraphicsItemAnimation ÊñπÊ≥ï‰∏çÂÜçÊîØÊåÅPyQt5 ‰∏≠Â∑≤Áªè‰∏çÂÜçÊîØÊåÅ PyQt4Áßç‰∏çÊé®ËçêÊñπÊ≥ï QGraphicsItemAnimationPyQt5 ‰∏≠ÂèØ‰ª•ËÄÉËôë‰ΩøÁî® QTransform QPyTextObject Ë¢´ËàçÂºÉPyQt4 implements the QPyTextObject as a workaround for the inability to define a Python class that is sub-classed from more than one Qt class. PyQt5 does support the ability to define a Python class that is sub-classed from more than one Qt class so long as all but one of the Qt classes are interfaces, i.e. they have been declared in C++ as such using Q_DECLARE_INTERFACE. Therefore QPyTextObject is not implemented in PyQt5. QSet Âú®PyQt5‰∏≠ÂÆåÂÖ®Áî® ÈõÜÂêà ÂΩ¢ÂºèÂÆûÁé∞pyuic5 ‰∏çÂÜçÊèê‰æõ --pyqt3-wrapperÂèÇÊï∞pyuic5 does not support the ‚Äìpyqt3-wrapper flag of pyuic4. pyrcc5 ‰∏çÂÜçÊèê‰æõ -py2 Êàñ -py3 ÂèÇÊï∞pyrcc5 cliÂ∑•ÂÖ∑‰∏çÂÜçÊîØÊåÅ -py2 ÊàñËÄÖ -py3 ÂèÇÊï∞„ÄÇÂõ†‰∏∫ËæìÂá∫ÁöÑ‰ª£Á†ÅÂÖºÂÆπÊâÄÊúâPythonÁâàÊú¨Ôºàv2.6‰ª•ÂêéÁöÑÊâÄÊúâÁâàÊú¨Ôºâ PyQt5 ‰ºòÂåñ Âêà‰ΩúÊÄßÂ§öÈáçÁªßÊâø ÔºàCooperative Multi-inheritanceÔºâÁöÑÂàùÂßãÂåñÊñπÂºè123# PyQt5 Ë∞ÉÁî®Áà∂Á±ªÁöÑ`__init__`ÊñπÊ≥ï.def __init(self, **kwargs): super().__init__(**kwargs) PyQt5 Ëá™Âä®ÈáäÊîæGILÔºåËÄå‰∏çÊòØPyQt4ÁöÑÂº∫Âà∂ÈáäÊîæPyQt5 ÈÄÄÂá∫Êó∂Ëá™Âä®Ë∞ÉÁî®sip.setdestroyonexit()‰ª•Á¶ÅÁî®Ëá™Âä®ÊûêÊûÑPythonËß£ÈáäÂô®ÈÄÄÂá∫PyQt4Â∫îÁî®Á®ãÂ∫èÊó∂‰ºöÈªòËÆ§Ë∞ÉÁî®C++ÊûêÊûÑÂô®Â§ÑÁêÜÊâÄÊúâÂÆÉÊã•ÊúâÁöÑÁ∫øÁ®ãÔºàËøôÈÄöÂ∏∏ÊòØ‰ª•ÈöèÊú∫ÁöÑÈ°∫Â∫èÔºåÂõ†Ê≠§ÂèØËÉΩ‰ºöÂØºËá¥Ëß£ÊûêÂô®Â¥©Ê∫ÉÔºâÔºåÈÄöËøáË∞ÉÁî® sip.setdestroyonexit() ÂáΩÊï∞ÂèØ‰ª•Á¶ÅÁî®„ÄÇPyQt5 ÊÄª‰ºöËá™Âä®Ë∞ÉÁî® sip.setdestroyonexit() ÂáΩÊï∞.]]></content>
      <categories>
        <category>Python</category>
        <category>PyQt</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyQt</tag>
        <tag>ËßÇÂØüËÄÖÊ®°Âºè</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PythonÊó∂Èó¥Áõ∏ÂÖ≥ÁöÑÁ±ªÂûãËΩ¨Âåñ]]></title>
    <url>%2F2017%2F06%2F13%2F20170002%2F</url>
    <content type="text"><![CDATA[pythonÊó∂Èó¥Áõ∏ÂÖ≥ÁöÑÂ∫ìÂíåËΩ¨Êç¢ÂÖ≥Á≥ª string Á±ªÂûã(time)1234567import time# ÂàõÂª∫ÊñáÊú¨Êó∂Èó¥s = time.ctime() # ‰ª•ÂΩìÂâçÁ≥ªÁªüÂú∞Âå∫Êù•ÂÜ≥ÂÆöËæìÂá∫ÁöÑÊó∂Èó¥ÊñáÊú¨Ê†ºÂºès = "2008-11-10 17:53:59"# ËΩ¨Êç¢‰∏∫Êó∂Èó¥ÂØπË±°t = time.strptime(s, "%Y-%m-%d %H:%M:%S") datetime ÂØπË±°1234567891011import datetime# ÂàõÂª∫datetimeÂØπË±°# dt_obj = datetime.datetime.now()dt_obj = datetime.datetime(2008, 11, 10, 17, 53, 59) # ËΩ¨Êç¢‰∏∫ÊñáÊú¨ÂûãÊó∂Èó¥print(dt_obj.strftime("%Y-%m-%d %H:%M:%S")) # ËΩ¨Êç¢‰∏∫Êó∂Èó¥ÂØπË±°time_tuple = dt_obj.timetuple()# ËΩ¨ÂåñÂì™‰ΩçÊó∂Èó¥Êà≥time_stamp = dt_obj.timestamp() time ÂØπË±°12345678910import time# ÂàõÂª∫timeÂØπË±°time_tuple = (2008, 11, 12, 13, 51, 18, 2, 317, 0)# ËΩ¨Êç¢‰∏∫ÊñáÊú¨ÂûãÊó∂Èó¥time.strftime("%Y-%m-%d %H:%M:%S", time_tuple)# ËΩ¨Êç¢‰∏∫datetimeÂØπË±°datetime.datetime(*time_tuple[0:6])# ËΩ¨Êç¢‰∏∫Êó∂Èó¥Êà≥time.mktime(time_tuple) int Á±ªÂûã(Êó∂Èó¥Êà≥)12345678import time, datetime# Ëé∑ÂèñÂΩìÂâçÊó∂Èó¥ÁöÑÊó∂Èó¥Êà≥timestamp = time.time()# ËΩ¨Êç¢‰∏∫ datetimeÂØπË±°datetime.datetime.fromtimestamp(timestamp) # Êú¨Âú∞Êó∂Âå∫Êó∂Èó¥# ËΩ¨Êç¢‰∏∫ timeÂØπË±°time.localtime(timestamp) Â∏¶Êó∂Âå∫ÁöÑÂ§ÑÁêÜËΩ¨Êç¢‰∏∫ datetimeÂØπË±°123456import time, datetime# Êú¨Âú∞Êó∂Âå∫Êó∂Èó¥datetime.datetime.fromtimestamp(timestamp)# Ê†áÂáÜÊó∂Âå∫Êó∂Èó¥datetime.datetime.utcfromtimestamp(timestamp) ËΩ¨Êç¢‰∏∫ timeÂØπË±°1234# Êú¨Âú∞Êó∂Âå∫time.localtime(timestamp)# Ê†áÂáÜÊó∂Âå∫time.gmtime(timestamp)]]></content>
      <categories>
        <category>Python</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>time</tag>
        <tag>datetime</tag>
        <tag>timestamp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PythonÁöÑËßÇÂØüËÄÖÊ®°ÂºèÔºåPyQt signal&slot Êú∫Âà∂ÁöÑÁêÜËß£ÂíåÂ∫îÁî®]]></title>
    <url>%2F2017%2F05%2F18%2F20170001%2F</url>
    <content type="text"><![CDATA[ÂÜÖÂÆπ‰ªãÁªç Êèê‰æõsignal&amp;slotÁöÑpythonÂÆûÁé∞ÊñπÂºèÔºàÊõ¥Â§ßÁöÑÁÅµÊ¥ªÊÄßÔºåÊïàÁéáÁõ∏ÊØîPyQtËá™Â∏¶Êõ¥‰ΩéÔºâ PyQt Âíå Python ‰∏§ÁßçÂÆûÁé∞ÊñπÂºèÁöÑÁâπËâ≤ÂØπÊØî PyQtÁâà ÂäüËÉΩÂä†Âº∫ ‰ΩøslotÂèØ‰ª•Êé•ÂèóÂà∞ÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ Áõ∏ÂÖ≥ËµÑÊ∫ê Êù•Ê∫ê: Ëã±Êñá Â§öÊ†∑Âåñ‰ø°Âè∑ ËµÑÊñô: PyQt5 ÂÆòÊñπÊñáÊ°£ ‰π¶Á±ç: Design PatternsIs an excellent summary and reference of many very useful patterns. ‰π¶Á±ç: Head First Design PatternsProvides a more gentle and explanatory view of many of the same patterns. ËÆ®ËÆ∫: SOF Custom pyqtSignal implementation Python signal&amp;slot ‰ø°Âè∑&amp;ÊßΩÁöÑ Python ÂÆûÁé∞‰ªãÁªç Âõ†‰∏∫ÂÆûÁé∞Êú∫Âà∂ÁöÑÊòØPython‰ª£Á†Å‰∏çÊòØPyQtÁöÑc++ÔºåÊïàÁéá‰ºöÊõ¥‰Ωé Êõ¥Ë¥¥ÂêàPythonÁöÑÈ£éÊ†ºÔºåmore pythonicÔºåÈôêÂà∂Êõ¥Â∞ë 1. ‰∏çËÉΩÁî®ÂÆû‰æãÂ±ûÊÄßÊõøÊç¢pyqtSignalÁöÑÁ±ªÂ±ûÊÄß..ËôΩÁÑ∂ pySignal Ëµ∑Ê∫ê‰∫é pyqtSignal ËÄå‰∏îÁõ¥Êé•ÂÆû‰æãÂåñ pySignal Á±ªÁöÑÂêÑÁßç‰ΩøÁî®ÊñπÂºèÂíå pyqtSignalÁõ∏ÂêåÔºàÊØïÁ´üËÆæËÆ°ÁöÑÊó∂ÂÄôÂ∞±Êé•Âè£Áõ∏ÂêåÔºâÔºå‰ΩÜÊòØÊúâ‰∏™ÂÆπÊòìËÆ©‰∫∫Âõ∞ÊÉëÁöÑÁÇπÊòØ 123456# ‰ª£Á†ÅÁ§∫‰æãÔºåpySignal Âú®ÂÆû‰æãÂåñÂêéÁöÑÁ±ª‰∏≠ÊõøÊç¢ pyqtSignalclass Window(QWidget): same_signal = pyqtSignal() def __init__(self, parent=None): super(Window, self).__init__(parent) self.same_signal = Signal() Â∏∏ÁêÜÊù•ËØ¥ pyqtSignal() Â∫îËØ•Ë¢´ pySignal ÊõøÊç¢Êéâ‰∫ÜÔºå‰ΩÜÂ¶ÇÊó©ÂÖàÊèêÂà∞ÁöÑ pyqtSignal Âú®ÊâÄÂú®Á±ªÂÆû‰æãÂåñÂêéÊëáË∫´‰∏ÄÂèòÊàêÂÆû‰æãÂåñÁöÑPyQt5.QtCore.pyqtBoundSignalÂØπË±°„ÄÇ Ëøô‰ª£Ë°®Êàë‰ª¨ÂÖàËµãÂÄºÁöÑÁ±ªÂ±ûÊÄßÂ∑≤ÁªèÂèòÊàê‰∫ÜÂÆû‰æãÂåñÁ±ªÁöÑÂ±ûÊÄß‰∫Ü ËøôÊ†∑ÈÄ†ÊàêÁöÑÂΩ±ÂìçÊòØÔºåÂ¶ÇÊûúÊàë‰ª¨ÁªôÊüêÁ±ªÂ§ö‰∏™ÂÆû‰æãÔºåÂÆÉ‰ª¨Â∞ÜÊúâËá™Â∑±ÁöÑsignalËÄå‰∏î‰∫í‰∏çÂπ≤Êâ∞Ôºàemit ‰πü‰∏çÂπ≤Êâ∞Ôºâ Êàë‰ª¨ÂÆûÁé∞ÁöÑÁ±ªÊ≤°ÊúâËøôÊ†∑ÁöÑÁâπÊÄßÔºåÁ±ªÂ±ûÊÄß‰∏ÄÁõ¥ÊòØÁ±ªÂ±ûÊÄß ËøôÊÑèÂë≥ÁùÄÁªôÊüêÁ±ªËµãÂÄºÁ±ªÂ±ûÊÄßÔºåÂÖ∂ÂÆû‰æã‰πü‰ºöÈÅó‰º†Áõ∏ÂêåÁöÑÁ±ªÂ±ûÊÄßÔºà‰∏çÁã¨Á´ãÔºâ Ëß£ÂÜ≥ÊñπÊ°àÊòØÔºåpySignalÂú®ÊúÄÂºÄÂßãÂ∞±Â∫îËØ•ÊòØÂÆû‰æãÂ±ûÊÄßËÄå‰∏çÊòØÁ±ªÂ±ûÊÄßÔºàËøôÊ†∑ËÉΩ‰øùËØÅÁã¨Á´ãÔºâ pySignal1234567891011121314151617class Signal: def __init__(self): self.__subscribers = [] def emit(self, *args, **kwargs): for subs in self.__subscribers: subs(*args, **kwargs) def connect(self, func): self.__subscribers.append(func) def disconnect(self, func): try: self.__subscribers.remove(func) except ValueError: print('Warning: function %s not removed ' 'from signal %s'%(func,self)) PyQt signal&amp;slot‰ªãÁªç1. signalÂè™ËÉΩ‰Ωú‰∏∫Á±ªÂ±ûÊÄß Only works with class attributesSignals are not class attributes. PyQt5.QtCore.pyqtSignal() is merely a vessel for a future instance variable containing a PyQt*.QtCore.pyqtBoundSignal instance. When you instantiate your class, pyqtSignal goes to work and injects itself as an instance variable and adds itself to the QMetaObject of the class. QMetaObject? It comes with useful methods such as .className(), superClass(), methodCount() which returns the name of the class, its superclasses and number of methods respectively. In C++ these are probably very useful, however a Python programmer might not be very impressed. It‚Äôs something we‚Äôve had access to all along via any instances‚Äô class, bases and dictattributes. 2.‰∏çËÉΩÂú®Â∑≤ÁªèÂÆû‰æãÂåñÁöÑÁ±ª‰∏≠Â£∞Êòé Cannot be used in an already instantiated classËøôÊòØÊúÄËÆ©‰∫∫Â§¥ÁóõÁöÑÁâπÊÄß Now here‚Äôs the kicker. If you‚Äôre doing any sort of base- or abstract class work with Qt widgets, you‚Äôll quickly realise that you can‚Äôt inherit signals. Other than that, if try and bypass inheritance and have a builder spit out widgets for you, you‚Äôll also notice how Dependency Injection isn‚Äôt going to work with signals. They have to be created as class attributes and they can only be created using pyqtSignal(). Please correct me if I‚Äôm wrong. 3.ÂøÖÈ°ªÂú®Â£∞ÊòésignalÊó∂ÊåáÊòé‰º†ËæìÂèÇÊï∞ÁöÑÁ±ªÂûã Must be pre-specified with any data-types you wish to emitÁ±ª‰ºº‰∫éÂº∫Á±ªÂûãËØ≠Ë®ÄÁöÑÁ±ªÂûãÂ£∞ÊòéÔºåËøôÂÆåÂÖ®‰∏çÊòØPythonÁöÑÈ£éÊ†ºÂòõ„ÄÇIn other languages, this is referred to as static typing. Python however doesn‚Äôt do any of that. 123456789# ËøôÊòØÊºîÁ§∫‰ª£Á†ÅÔºà‰º™‰ª£Á†ÅÔºâÔºåÂÆûÈôÖ‰∏äÂæó‰Ωú‰∏∫Á±ªÂ±ûÊÄßÂ£∞Êòé# normally have to be run via a class' class attribute.signal = pyqtSignal(int, str)signal.emit(my_number, my_string)signal.emit(my_string, my_number)# Êä•Èîô TypeErrorsignal.emit(not_enough_args)# Êä•Èîô TypeError 4. ‰∏çÊîØÊåÅÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ Does not support keyword arguments TypeError: emit() takes no keyword arguments Keyword arguments are quite useful as a means of self-documenting code. signal.emit(5)Êú¨Â∫îËØ•ÂÜôÂÅösignal.emit(velocity=5)ËøôÊ†∑‰∏ç‰ªÖÂ¢ûÂº∫ÂèØËØªÊÄßÔºåËøòÂèØ‰ª•Âä†Âº∫Êú∫Âà∂‰ΩøÂÖ∂ÂèØ‰ª•Êê∫Â∏¶Áõ∏ÂêåÂÖ≥ÈîÆÂ≠óÂèÇÊï∞ it can also be used to enforce signals and slots to carry an identical argument signature. 12345678910111213141516def callback(name, address): print("Name=%s and address=%s" % (name, address))signal = Signal()signal.connect(callback)# Mistake the first argument for a tuple.signal.emit(names=('marcus', 'ottosson'), address='earth')# TypeError: callback() got an unexpected keyword argument 'names'# When actually, its a single string value.signal.emit(name='marcus ottosson', address='earth')# Name=marcus ottosson and address=earth# Of course, non-keyword arguments works too.signal.emit('marcus ottosson', 'earth') 5. Cannot be modified after instantiationPythonÂØπË±°ÔºåÂæàËá™ÁÑ∂ÁöÑÊîØÊåÅ ‰ª£Á†ÅÂä®ÊÄÅ‰øÆÊîπÔºàmonkey-patchÔºâ,‰ΩÜpyqtSignalsÈùûÂ∏∏ÁâπÂà´ÁöÑ‰∏çÊîØÊåÅAs a Python object, you would expect the ability to monkey-patch, but pyqtSignals are special enough to not let you do any of that. I‚Äôll provide an example of monkey-patching for you below. ÁêÜËß£ Understanding Signals and SlotsQt Êèê‰æõÁöÑ ‰ø°Âè∑ÂíåÊßΩ Êú∫Âà∂Âü∫‰∫é‰∏Ä‰∏™(Ë°å‰∏∫Âûã)ËÆæËÆ°Ê®°Âºè -&gt;ËßÇÂØüËÄÖÊ®°Âºè (Observer pattern) (TODO Âè¶ÂºÄ‰∏ÄÊñáËØ¶ÁªÜÂàÜÊûê PythonÁöÑËßÇÂØüËÄÖÊ®°Âºè) Ë∑®Á∫øÁ®ã‰∏äËø∞ÂÆûÁé∞ÂæàÁõ¥Êé•ÁöÑ‰ªãÁªç‰∫ÜÂü∫Êú¨ÂéüÁêÜ‰ΩÜÁº∫Â∞ë‰∫ÜÂæàÂ§öÂ∫îËØ•ËÄÉËôëÂà∞ÁöÑÂ∫îÁî®Âú∫ÊôØÊØîÂ¶ÇË∑®Á∫øÁ®ã„ÄÇ Âú®‰ΩøÁî®pySignalÊó∂‰Ω†ÂèØËÉΩÂ∑≤ÁªèÈÅáÂà∞slotÊâÄÂú®ÁöÑÁ∫øÁ®ãÂæàÂÆπÊòìÂ¥©Ê∫ÉÔºàÊó†ËÆ∫ÊòØÂú® QThread ÊàñËÄÖ PythonÁöÑÂ§öÁ∫øÁ®ãÊ®°ÂùóÔºâÔºåËøô‚ÄúÊÄ™ÁΩ™‰∫é‚ÄùÂ§öÁ∫øÁ®ã‰πãÁæéÔºå‰∏§‰∏™Á∫øÁ®ãÂèØËÉΩÂêåÊó∂Â∞ùËØïÊàñËÆøÈóÆÂêå‰∏ÄËµÑÊ∫ê. QObject.sender()ÁÆÄËÄåË®Ä‰πã, QObject.sender() ÂèØ‰ª•ËÆ©Êé•Êî∂Á´ØÂèØ‰ª•Ëé∑ÂæóÂèëÈÄÅÁ´ØËµÑÊ∫ê„ÄÇ 1234def callback(self, message): # Âú® pySignal Âíå pyqtSignal ‰∏≠ÈÉΩÊîØÊåÅslot‰∏≠Êü•ËØ¢Êù•Ê∫êsignal source_of_signal = self.sender() # ËøôÂú®ÂΩìslotÂèØËÉΩÊî∂Âà∞Â§ö‰∏™Êù•Ê∫êÁöÑsignal‰∏îÈúÄË¶ÅÂå∫ÂàÜ‰ªñ‰ª¨ÁöÑÊó∂ÂÄôÈùûÂ∏∏ÊúâÁî® APIÂèÇËÄÉËµÑÊñô‰∏≠Ë≠¶ÂëäËØ¥ËøôÁßçÊñπÂºèÂèØËÉΩ‰ºöÁ†¥ÂùèÈù¢ÂêëÂØπË±°Á®ãÂ∫èÁöÑÊ®°ÂùóÊÄßÔºåÂª∫ËÆÆÂ∞ΩÈáèÈÅøÂÖç Âú®ËøôÈáåÊàë‰∏çÂáÜÂ§áÊèê‰æõÂÖ®Êñπ‰ΩçÁöÑÊµãËØÑ, ‰ΩÜpyÁâàÁõ∏ÊØîqtÁâà pyqtSignal(), Â¶ÇÊûúÊòØobj1 -&gt; obj2 -&gt; obj3 ËøôÁßçÈìæÂºèË∞ÉÁî®ÁöÑËØùÔºåÂú®obj3ÁöÑslot‰∏≠Êü•ËØ¢senderÁöÑËØù‰ºöËøîÂõûobj1 123456# Âú® obj3.listen ‰∏≠Ë∞ÉÁî®sender()‰ºöËøîÂõû obj1ËÄå‰∏çÊòØobj2ÔºåËôΩÁÑ∂obj2ÊòØË∞ÉÁî®obj3ÁöÑsignalobj1.signal.connect(obj2.emit)obj2.signal.connect(obj3.listen)obj1.signal.emit()# ËÄåÂú® pyqtSignal, Â∞Ü‰ºöËøîÂõû obj2. Â∫îÁî®Example ‚Äì ÁõëËßÜÁ±ªÂ±ûÊÄßÁöÑÁä∂ÊÄÅIt can sometimes be useful to monitor an attribute of a class. 12345678910111213141516171819202122232425262728293031323334353637class Listener(object): def __init__(self): self.container = Container() self.container.value_changed.connect(self.value_changed_event) def value_changed_event(self, previous, current): print("%r says: Value was changed from %s to %s" % (self.__class__.__name__, previous, current))class Container(object): def __init__(self): self.__value = None # ÂΩì`value` ÊîπÂèò‰∫ÜÊàë‰ª¨Â∞±ÂèëÈÄÅ‰ø°Âè∑ self.value_changed = core.Signal() @property def value(self): return self.__value @value.setter def value(self, value): self.value_changed.emit(previous=self.__value, current=value) self.__value = valueif __name__ == '__main__': list = Listener() # ÊîπÂèòvalueÂÄº‰æø‰ºöËß¶Âèë list.container.value = 5 # 'Listening' ‰∏≠ÊâìÂç∞: Value was changed from None to 5 list.container.value = 6 # 'Listening' ‰∏≠ÊâìÂç∞: Value was changed from 5 to 6 ÊÄªÁªì Âú®Êüê‰∫õÂ§çÊùÇÁöÑÂú∫ÊôØ‰∏ãÔºåÂç≥‰ΩøÂäüËÉΩÂº∫Â§ßÁöÑpyqtSignal‰πü‰ºöËß¶Áü≠Êùø,Ëøô‰∏™Êó∂ÂÄôÂ∞±ÂèØ‰ª•Êâ©Â±ïÊàñËá™Â∑±ÂÆûÁé∞ ‰ΩÜÈÄâÊã©‰∏çÁ´ôÂú®Â∑®‰∫∫ËÇ©ËÜÄ‰∏äËÄåËá™Â∑±ÂÆûÁé∞Êüê‰∏ÄÁâπÊÄßÁöÑËØùÔºåÊúâ‰∫õÊÉÖÂÜµÊàë‰ª¨‰ºöÂú®ÈÅáÂà∞Êó∂ÂèëÁé∞ÔºàÂÉèÂÖàÊèêÂà∞ÁöÑÁ∫øÁ®ãÈó¥ÁöÑÂÆâÂÖ®ÊÄßÔºâ„ÄÇËøô‰∏™Êó∂ÂÄôÂ∞±‰∏çÂæó‰∏çÊåëËµ∑Ëá™Â∑±Âä®ÊâãÂÆûÁé∞Êñ∞ÁâπÊÄßÁöÑÊãÖÂ≠ê„ÄÇ ËôΩÁÑ∂‰∏§ÁßçsignalÊú∫Âà∂ÁöÑÂÆûÁé∞ÁõÆÁöÑÊòØ‰∏ÄÊ†∑ÁöÑÔºå‰ΩÜÂÆÉ‰ª¨‰∏ç‰∏ÄÂÆöÈúÄË¶ÅÁî®Ë∞ÅÊù•ÊõøÊç¢Ë∞Å„ÄÇÂèØËÉΩÊúÄÂ•ΩÁöÑÊñπÂºèÊòØ‰∏§‰∏™Âú®‰ª£Á†Å‰∏≠ÂêåÊó∂‰ΩøÁî®ÔºåÂêÑÂèñÊâÄÈïøÔºåÂú®ÂêÑËá™ÈÄÇÂêàÁöÑÂ∫îÁî®Âú∫ÊôØ‰ΩøÁî®„ÄÇ‰æãÂ¶ÇÔºåQThreads ÂèØ‰ª•‰ΩøÁî® pyqtSignal ËÄåÊàë‰ª¨Ëá™ÂÆö‰πâÁöÑÁªÑ‰ª∂ÁöÑÂü∫Á±ªÂíåÂà∂ÈÄ†Âô®(TODO builders)Â∞±ÂèØ‰ª•‰ΩøÁî® pySignal]]></content>
      <categories>
        <category>Python</category>
        <category>PyQt</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>PyQt</tag>
        <tag>ËßÇÂØüËÄÖÊ®°Âºè</tag>
      </tags>
  </entry>
</search>
